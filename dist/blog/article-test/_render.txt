<header>
  <a class="logo-header" href="">
    <img src="../../public/media/svg-assets/logo-donzelli-black.svg" alt="">
  </a>
  <div class="container-menu-dropdown-elements">
    <div class="element nav-item-typo" data-panel="1">Feed</div>
    <div class="element nav-item-typo" data-panel="2">Spaces</div>
    <div class="element nav-item-typo" data-panel="3">Collections</div>
    <div class="element nav-item-typo" data-panel="4">Type of Items</div>
    <div class="element nav-item-typo" data-panel="5">Brands & Studios</div>
    <div class="element nav-item-typo" data-panel="6">Designers</div>
  </div>
  <div class="other-links-header">
    <a class="nav-item-typo" href="">Guide</a>
    <a class="nav-item-typo" href="">Project & Features</a>
  </div>
  <div class="container-sidebar-studiopro">
    <a href="" class="studiopro-button-header nav-item-typo">
      <div class="point"></div>
      Studio Pro
    </a>
    <div class="burger-sidebar-desk nav-item-typo">
      Menu
    </div>
  </div>
  <div class="line-header-grey"></div>
</header>

<div class="container-panels">
  <div class="panel panel1" data-panel="1">
    <div class="container-panel container-panel1">
      <div class="infos-feed-panel-header ">
        <p class="sidebar-item-desk ">Feed <br>
          by Donzelli®
        </p>
        <a class="button-border-inside-panel nav-item-typo">
          <span class="point"></span>
          Découvrir le Feed
        </a>
        <p class="small-text text-info-feed">Dive into our Inspiration Feed. <br>
          Legendary products captives, designs inspires. Welcome to a world where elegance meets refinement.</p>
      </div>
      <div class="products-feed-showcase-header">
        <a class="product-feed pf1" href="">
          <div class="img-container-pf">
            <img src="../../public/media/products/lamp-taccia-flos-donzelli.png" alt="">
          </div>
          <div class="about-pf-header">
            <p class="title-pf-header nav-item-typo">Collection Hamer™</p>
            <p class="description-pf-header small-text">David Chipperfield is an acclaimed British architect.</p>
            <p class="nav-item-typo link-pf-header">Discover</p>
          </div>
        </a>
        <a class="product-feed pf2" href="">
          <div class="img-container-pf">
            <img src="../../public/media/products/chair-pierre-jeanneret-donzelli.png" alt="">
          </div>
          <div class="about-pf-header">
            <p class="title-pf-header nav-item-typo">Collection Hamer™</p>
            <p class="description-pf-header small-text">David Chipperfield is an acclaimed British architect.</p>
            <p class="nav-item-typo link-pf-header">Discover</p>
          </div>
        </a>
      </div>
    </div>
  </div>
  <div class="panel panel2" data-panel="2">
    <div class="container-panel container-panel2">
      <div class="infos-feed-panel-header ">
        <p class="sidebar-item-desk ">Our Spaces
        </p>
        <a class="button-border-inside-panel nav-item-typo">
          <span class="point"></span>
          Découvrir le Feed
        </a>
        <p class="small-text text-info-feed">Dive into our Inspiration Feed. <br>
          Legendary products captives, designs inspires. Welcome to a world where elegance meets refinement.</p>
      </div>
      <div class="products-feed-showcase-header">
        <a class="product-feed pf1" href="">
          <div class="img-container-pf">
            <img src="../../public/media/header-spaces1.png" alt="">
          </div>
          <div class="about-pf-header">
            <p class="title-pf-header nav-item-typo">Collection Hamer™</p>
            <p class="description-pf-header small-text">David Chipperfield is an acclaimed British architect.</p>
            <p class="nav-item-typo link-pf-header">Discover</p>
          </div>
        </a>
        <a class="product-feed pf2" href="">
          <div class="img-container-pf">
            <img src="../../public/media//header-spaces2.png" alt="">
          </div>
          <div class="about-pf-header">
            <p class="title-pf-header nav-item-typo">Collection Hamer™</p>
            <p class="description-pf-header small-text">David Chipperfield is an acclaimed British architect.</p>
            <p class="nav-item-typo link-pf-header">Discover</p>
          </div>
        </a>
      </div>
    </div>
  </div>
  <div class="panel panel3" data-panel="3">
    <div class="container-panel container-panel3">
      <div class="infos-collections-panel-header">
        <p class="sidebar-item-desk ">Collections
        </p>

        <div class="container-double-list-collections">
          <div class="column-collections-list">
            <p class="nav-item-typo">Nos Collections Phares</p>
            <ul class="nav-item-typo">
              <a href="">
                <li>Height</li>
              </a>
              <a href="">
                <li>Elven</li>
              </a>
              <a href="">
                <li>Yamaha</li>
              </a>
              <a href="">
                <li>Manhattan</li>
              </a>
            </ul>
          </div>
          <div class="column-collections-list">
            <p class="nav-item-typo">All the collections</p>
            <ul class="nav-item-typo">
              <a href="">
                <li>Height</li>
              </a>
              <a href="">
                <li>Elven</li>
              </a>
              <a href="">
                <li>Yamaha</li>
              </a>
              <a href="">
                <li>Manhattan</li>
              </a>
              <a href="">
                <li>Height</li>
              </a>
              <a href="">
                <li>Elven</li>
              </a>
              <a href="">
                <li>Yamaha</li>
              </a>
              <a href="">
                <li>Manhattan</li>
              </a>
            </ul>
          </div>
        </div>

      </div>
      <div class="products-feed-showcase-header">
        <a class="product-feed pf1" href="">
          <div class="img-container-pf">
            <img src="../../public/media/header-spaces1.png" alt="">
          </div>
          <div class="about-pf-header">
            <p class="title-pf-header nav-item-typo">Collection Hamer™</p>
            <p class="description-pf-header small-text">David Chipperfield is an acclaimed British architect.</p>
            <p class="nav-item-typo link-pf-header">Discover</p>
          </div>
        </a>
        <a class="product-feed pf2" href="">
          <div class="img-container-pf">
            <img src="../../public/media//header-spaces2.png" alt="">
          </div>
          <div class="about-pf-header">
            <p class="title-pf-header nav-item-typo">Collection Hamer™</p>
            <p class="description-pf-header small-text">David Chipperfield is an acclaimed British architect.</p>
            <p class="nav-item-typo link-pf-header">Discover</p>
          </div>
        </a>
      </div>
    </div>
  </div>
  <div class="panel panel4" data-panel="4">
    <div class="container-panel container-panel4">
      Les Gros Items
    </div>
  </div>
  <div class="panel panel5" data-panel="5">
    <div class="container-panel container-panel5">
      Les Grosses Marques
    </div>
  </div>
  <div class="panel panel6" data-panel="6">
    <div class="container-panel container-panel6">
      Les Gros Designers
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const containerMenu = document.querySelector(".container-menu-dropdown-elements");
    const containerPanels = document.querySelector(".container-panels");
    const panels = document.querySelectorAll('.panel');

    containerMenu.addEventListener("mouseover", function () {
      containerPanels.classList.add("active");
    });
    containerMenu.addEventListener("mouseout", function () {
      containerPanels.classList.remove("active");
    });

    containerPanels.addEventListener("mouseover", function () {
      containerPanels.classList.add("active");
    });

    containerPanels.addEventListener("mouseout", function () {
      containerPanels.classList.remove("active");
    });

    const elements = document.querySelectorAll('.element');
    elements.forEach(element => {
      element.addEventListener("mouseover", function () {
        const panelIndex = this.getAttribute('data-panel');
        panels.forEach((panel, index) => {
          panel.style.zIndex = index + 1 == panelIndex ? "101" : "99";
        });
      });
    });

    panels.forEach(panel => {
      panel.addEventListener("mouseover", function () {
        containerPanels.classList.add("active");
      });
    });
  });


  document.addEventListener("DOMContentLoaded", function () {
    const panels = document.querySelectorAll('.panel');
    const elements = document.querySelectorAll('.element');
    const containerPanels = document.querySelector('.container-panels');
    let isFirstTabHovered = false;
    let isFirstElementHovered = false;
    let timeout;

    containerPanels.addEventListener("mouseleave", function (event) {
      if (!event.relatedTarget || !containerPanels.contains(event.relatedTarget)) {
        clearTimeout(timeout);
        containerPanels.classList.remove('active');
        containerPanels.dataset.hovered = 'false'; // Réinitialiser la propriété de dataset
        isFirstTabHovered = false;
        isFirstElementHovered = false;
        removePanelActiveClass(); // Retirer panel-active de tous les container-panel
      }
    });

    document.addEventListener("mousemove", function (event) {
      // Réinitialiser les états si la souris quitte la fenêtre
      if (event.target === document.documentElement) {
        isFirstTabHovered = false;
        isFirstElementHovered = false;
      }
    });

    function removePanelActiveClass() {
      const activePanels = document.querySelectorAll('.container-panel.panel-active');
      activePanels.forEach(panel => {
        panel.classList.remove('panel-active');
      });
    }

    function handleMouseover(target, panelIndex, delay) {
      if (!containerPanels.classList.contains('active') || (!isFirstTabHovered && !isFirstElementHovered)) {
        clearTimeout(timeout);
        containerPanels.classList.add('active');
        containerPanels.dataset.hovered = 'true'; // Ajouter une propriété de dataset pour indiquer le survol

        timeout = setTimeout(() => {
          // Vérifier si la souris est toujours sur .container-panels
          if (containerPanels.dataset.hovered === 'true') {
            const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
            containerPanel.classList.add('panel-active');
            isFirstTabHovered = true;
          }
        }, 400); // Ajuster le delai de l'arrivée de l'interieur du panneau
      }
    }
    function handleMouseout(panelIndex, relatedTarget) {
      if (containerPanels.classList.contains('active') && isFirstTabHovered) {
        clearTimeout(timeout);

        // Si la souris quitte .container-panels et entre dans .element, alors délai = 0
        if (relatedTarget && relatedTarget.classList.contains('element')) {
          timeout = setTimeout(() => {
            const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
            containerPanel.classList.remove('panel-active');
            isFirstElementHovered = false;
          }, 0);
        } else {
          isFirstElementHovered = true;
        }
      }
    }

    // function handleMouseout(panelIndex, relatedTarget) {
    //   if (containerPanels.classList.contains('active') && isFirstTabHovered) {
    //     clearTimeout(timeout);

    //     // Si la souris quitte .container-panels et entre dans .element, alors délai = 0
    //     if (relatedTarget && relatedTarget.classList.contains('element')) {
    //       timeout = setTimeout(() => {
    //         const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
    //         containerPanel.classList.remove('panel-active');
    //         isFirstElementHovered = false;
    //       }, 0);
    //     } else {
    //       isFirstElementHovered = true;
    //     }
    //   }
    // }

    elements.forEach(element => {
      element.addEventListener("mouseover", function () {
        const panelIndex = this.getAttribute('data-panel');
        handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 300);
      });

      element.addEventListener("mouseout", function (event) {
        const panelIndex = this.getAttribute('data-panel');
        handleMouseout(panelIndex, event.relatedTarget);
      });
    });

    panels.forEach(panel => {
      panel.addEventListener("mouseover", function () {
        const panelIndex = this.getAttribute('data-panel');
        if (!isChildOf(event.relatedTarget, containerPanels)) {
          handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 300);
        }
      });

      panel.addEventListener("mouseout", function (event) {
        const panelIndex = this.getAttribute('data-panel');
        handleMouseout(panelIndex, event.relatedTarget);
      });
    });

    function isChildOf(child, parent) {
      while (child !== null) {
        if (child === parent) {
          return true;
        }
        child = child.parentNode;
      }
      return false;
    }
  });

  // document.addEventListener("DOMContentLoaded", function () {
  //   const panels = document.querySelectorAll('.panel');
  //   const elements = document.querySelectorAll('.element');
  //   const containerPanels = document.querySelector('.container-panels');
  //   let isFirstTabHovered = false;
  //   let isFirstElementHovered = false;
  //   let timeout;

  //   containerPanels.addEventListener("mouseleave", function (event) {
  //     if (!event.relatedTarget || !containerPanels.contains(event.relatedTarget)) {
  //       clearTimeout(timeout);
  //       containerPanels.classList.remove('active');
  //       isFirstTabHovered = false;
  //       isFirstElementHovered = false;
  //       removePanelActiveClass(); // Retirer panel-active de tous les container-panel
  //     }
  //   });

  //   document.addEventListener("mousemove", function (event) {
  //     // Réinitialiser les états si la souris quitte la fenêtre
  //     if (event.target === document.documentElement) {
  //       isFirstTabHovered = false;
  //       isFirstElementHovered = false;
  //     }
  //   });

  //   function removePanelActiveClass() {
  //     const activePanels = document.querySelectorAll('.container-panel.panel-active');
  //     activePanels.forEach(panel => {
  //       panel.classList.remove('panel-active');
  //     });
  //   }

  //   function handleMouseover(target, panelIndex, delay) {
  //     if (!containerPanels.classList.contains('active') || (!isFirstTabHovered && !isFirstElementHovered)) {
  //       clearTimeout(timeout);
  //       containerPanels.classList.add('active');
  //       timeout = setTimeout(() => {
  //         const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
  //         containerPanel.classList.add('panel-active');
  //         isFirstTabHovered = true;
  //       }, 600); // Changer la valeur de délai à 1000 millisecondes (1 seconde)
  //     }
  //   }


  //   function handleMouseout(panelIndex, relatedTarget) {
  //     if (containerPanels.classList.contains('active') && isFirstTabHovered) {
  //       clearTimeout(timeout);

  //       // Si la souris quitte .container-panels et entre dans .element, alors délai = 0
  //       if (relatedTarget && relatedTarget.classList.contains('element')) {
  //         timeout = setTimeout(() => {
  //           const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
  //           containerPanel.classList.remove('panel-active');
  //           isFirstElementHovered = false;
  //         }, 0);
  //       } else {
  //         isFirstElementHovered = true;
  //       }
  //     }
  //   }

  //   elements.forEach(element => {
  //     element.addEventListener("mouseover", function () {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 500);
  //     });

  //     element.addEventListener("mouseout", function (event) {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseout(panelIndex, event.relatedTarget);
  //     });
  //   });

  //   panels.forEach(panel => {
  //     panel.addEventListener("mouseover", function () {
  //       const panelIndex = this.getAttribute('data-panel');
  //       if (!isChildOf(event.relatedTarget, containerPanels)) {
  //         handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 500);
  //       }
  //     });

  //     panel.addEventListener("mouseout", function (event) {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseout(panelIndex, event.relatedTarget);
  //     });
  //   });

  //   function isChildOf(child, parent) {
  //     while (child !== null) {
  //       if (child === parent) {
  //         return true;
  //       }
  //       child = child.parentNode;
  //     }
  //     return false;
  //   }
  // });



  // CA MARCHE

  // document.addEventListener("DOMContentLoaded", function () {
  //   const panels = document.querySelectorAll('.panel');
  //   const elements = document.querySelectorAll('.element');
  //   const containerPanels = document.querySelector('.container-panels');
  //   let isFirstTabHovered = false;
  //   let isFirstElementHovered = false;
  //   let timeout;

  //   containerPanels.addEventListener("mouseleave", function (event) {
  //     if (!event.relatedTarget || !containerPanels.contains(event.relatedTarget)) {
  //       clearTimeout(timeout);
  //       containerPanels.classList.remove('active');
  //       isFirstTabHovered = false;
  //       isFirstElementHovered = false;
  //       removePanelActiveClass(); // Retirer panel-active de tous les container-panel
  //     }
  //   });

  //   document.addEventListener("mousemove", function (event) {
  //     // Réinitialiser les états si la souris quitte la fenêtre
  //     if (event.target === document.documentElement) {
  //       isFirstTabHovered = false;
  //       isFirstElementHovered = false;
  //     }
  //   });

  //   function removePanelActiveClass() {
  //     const activePanels = document.querySelectorAll('.container-panel.panel-active');
  //     activePanels.forEach(panel => {
  //       panel.classList.remove('panel-active');
  //     });
  //   }

  //   function handleMouseover(target, panelIndex, delay) {
  //     if (!containerPanels.classList.contains('active') || (!isFirstTabHovered && !isFirstElementHovered)) {
  //       clearTimeout(timeout);
  //       containerPanels.classList.add('active');
  //       timeout = setTimeout(() => {
  //         const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
  //         containerPanel.classList.add('panel-active');
  //         isFirstTabHovered = true;
  //       }, delay);
  //     }
  //   }

  //   function handleMouseout(panelIndex, relatedTarget) {
  //     if (containerPanels.classList.contains('active') && isFirstTabHovered) {
  //       clearTimeout(timeout);

  //       // Si la souris quitte .container-panels et entre dans .element, alors délai = 0
  //       if (relatedTarget && relatedTarget.classList.contains('element')) {
  //         timeout = setTimeout(() => {
  //           const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
  //           containerPanel.classList.remove('panel-active');
  //           isFirstElementHovered = false;
  //         }, 0);
  //       } else {
  //         isFirstElementHovered = true;
  //       }
  //     }
  //   }

  //   elements.forEach(element => {
  //     element.addEventListener("mouseover", function () {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 500);
  //     });

  //     element.addEventListener("mouseout", function (event) {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseout(panelIndex, event.relatedTarget);
  //     });
  //   });

  //   panels.forEach(panel => {
  //     panel.addEventListener("mouseover", function () {
  //       const panelIndex = this.getAttribute('data-panel');
  //       if (!isChildOf(event.relatedTarget, containerPanels)) {
  //         handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 500);
  //       }
  //     });

  //     panel.addEventListener("mouseout", function (event) {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseout(panelIndex, event.relatedTarget);
  //     });
  //   });

  //   function isChildOf(child, parent) {
  //     while (child !== null) {
  //       if (child === parent) {
  //         return true;
  //       }
  //       child = child.parentNode;
  //     }
  //     return false;
  //   }
  // });



  // SANS CLIGNOTEMENT


  // document.addEventListener("DOMContentLoaded", function () {
  //   const panels = document.querySelectorAll('.panel');
  //   const elements = document.querySelectorAll('.element');
  //   const containerPanels = document.querySelector('.container-panels');
  //   let isFirstTabHovered = false;
  //   let isFirstElementHovered = false;
  //   let timeout;

  //   containerPanels.addEventListener("mouseleave", function (event) {
  //     if (!event.relatedTarget || !containerPanels.contains(event.relatedTarget)) {
  //       clearTimeout(timeout);
  //       containerPanels.classList.remove('active');
  //       isFirstTabHovered = false;
  //       isFirstElementHovered = false;
  //     }
  //   });

  //   // Ajout du gestionnaire d'événements sur le document
  //   document.addEventListener("mousemove", function (event) {
  //     // Réinitialiser les états si la souris quitte la fenêtre
  //     if (event.target === document.documentElement) {
  //       isFirstTabHovered = false;
  //       isFirstElementHovered = false;
  //     }
  //   });

  //   function handleMouseover(target, panelIndex, delay) {
  //     if (!containerPanels.classList.contains('active') || (!isFirstTabHovered && !isFirstElementHovered)) {
  //       containerPanels.classList.add('active');
  //       clearTimeout(timeout);
  //       timeout = setTimeout(() => {
  //         const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
  //         containerPanel.classList.add('panel-active');
  //         isFirstTabHovered = true;
  //       }, delay);
  //     }
  //   }

  //   function handleMouseout(panelIndex, relatedTarget) {
  //     if (containerPanels.classList.contains('active') && isFirstTabHovered) {
  //       clearTimeout(timeout);

  //       // Si la souris quitte .container-panels et entre dans .element, alors délai = 0
  //       if (relatedTarget && relatedTarget.classList.contains('element')) {
  //         timeout = setTimeout(() => {
  //           const containerPanel = document.querySelector(`.container-panel${panelIndex}`);
  //           containerPanel.classList.remove('panel-active');
  //           isFirstElementHovered = false;
  //         }, 0);
  //       } else {
  //         isFirstElementHovered = true;
  //       }
  //     }
  //   }

  //   elements.forEach(element => {
  //     element.addEventListener("mouseover", function () {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 500);
  //     });

  //     element.addEventListener("mouseout", function (event) {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseout(panelIndex, event.relatedTarget);
  //     });
  //   });

  //   panels.forEach(panel => {
  //     panel.addEventListener("mouseover", function () {
  //       const panelIndex = this.getAttribute('data-panel');
  //       // Ajoutons une condition pour éviter de déclencher l'événement lorsque la souris entre dans .container-panel
  //       if (!isChildOf(event.relatedTarget, containerPanels)) {
  //         handleMouseover(this, panelIndex, isFirstTabHovered ? 0 : 500);
  //       }
  //     });

  //     panel.addEventListener("mouseout", function (event) {
  //       const panelIndex = this.getAttribute('data-panel');
  //       handleMouseout(panelIndex, event.relatedTarget);
  //     });
  //   });

  //   function isChildOf(child, parent) {
  //     while (child !== null) {
  //       if (child === parent) {
  //         return true;
  //       }
  //       child = child.parentNode;
  //     }
  //     return false;
  //   }
  // });





</script><nav>

</nav><div class="sidebar-desk">
    <div class="close-sidebar-desk nav-item-typo">
        Fermer
    </div>
    <div class="container-items-sidebar-desk">
        <p class="indiction-menu-sidebar-desk nav-item-typo">Menu</p>
        <div class="list-menu-sidebar-desk">
            <a class="sidebar-item-desk" href="">About us</a>
            <a class="sidebar-item-desk" href="">Vision</a>
            <a class="sidebar-item-desk" href="">Project & Features</a>
            <a class="sidebar-item-desk" href="">Studio Pro</a>
            <a class="sidebar-item-desk" href="">Engagements</a>
            <a class="sidebar-item-desk" href="">Magazine</a>
            <a class="sidebar-item-desk" href="">Contact</a>
            <a class="sidebar-item-desk" href="">Press</a>
            <a class="sidebar-item-desk" href="">Careers</a>
        </div>
    </div>
</div>

<div class="back-invisible-sidebar">

</div><h1>Article Test</h1>
<footer>

</footer>